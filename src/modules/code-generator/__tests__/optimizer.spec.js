import Optimizer from '../optimizer'
import { eventsOptimized, eventsToRecord, headlessActions } from '../constants'

describe('Optimizer', () => {
  test('it should optimize correctly', () => {
    const events = [
      {
        action: 'click',
        coordinates: null,
        frameId: 0,
        frameUrl: 'https://example.com/',
        href: null,
        key: null,
        selector: '.form-control',
        tagName: 'INPUT',
        value: '',
      },
      {
        action: 'keydown',
        coordinates: null,
        frameId: 0,
        frameUrl: 'https://example.com/',
        href: null,
        key: 'Process',
        selector: '.form-control',
        tagName: 'INPUT',
        value: '',
      },
      {
        action: 'keydown',
        coordinates: null,
        frameId: 0,
        frameUrl: 'https://example.com/',
        href: null,
        key: 'Process',
        selector: '.form-control',
        tagName: 'INPUT',
        value: 't',
      },
      {
        action: 'keydown',
        coordinates: null,
        frameId: 0,
        frameUrl: 'https://example.com/',
        href: null,
        key: 'Process',
        selector: '.form-control',
        tagName: 'INPUT',
        value: `t'y`,
      },
      {
        action: 'keydown',
        coordinates: null,
        frameId: 0,
        frameUrl: 'https://example.com/',
        href: null,
        key: 'Process',
        selector: '.form-control',
        tagName: 'INPUT',
        value: `t'y'p`,
      },
      {
        action: 'keydown',
        coordinates: null,
        frameId: 0,
        frameUrl: 'https://example.com/',
        href: null,
        key: 'Process',
        selector: '.form-control',
        tagName: 'INPUT',
        value: `t'y'pe`,
      },
      {
        action: 'keydown',
        coordinates: null,
        frameId: 0,
        frameUrl: 'https://example.com/',
        href: null,
        key: 'Process',
        selector: '.form-control',
        tagName: 'INPUT',
        value: 'types',
      },
      {
        action: 'keydown',
        coordinates: null,
        frameId: 0,
        frameUrl: 'https://example.com/',
        href: null,
        key: 'Enter',
        selector: '.form-control',
        tagName: 'INPUT',
        value: 'types',
      },
      {
        action: 'click',
        coordinates: null,
        frameId: 0,
        frameUrl: 'https://example.com/',
        href: 'https://example.com/',
        key: null,
        selector: '.no-underline',
        tagName: 'A',
      },
      {
        action: 'NAVIGATION',
        frameId: null,
        frameUrl: null,
      },
      {
        action: 'NAVIGATION',
        frameId: null,
        frameUrl: null,
      },
      {
        action: 'keydown',
        coordinates: null,
        frameId: 0,
        frameUrl: 'https://eval.com',
        href: 'https://eval.com',
        key: 'Control',
        selector: '.Box-header > .d-flex > .flex-1 > .css-truncate > .text-bold',
        tagName: 'A',
      },
      {
        action: 'keydown',
        coordinates: null,
        frameId: 0,
        frameUrl: 'https://eval.com',
        href: 'https://eval.com',
        key: 'Control',
        selector: '.Box-header > .d-flex > .flex-1 > .css-truncate > .text-bold',
        tagName: 'A',
      },
      {
        action: 'keydown',
        coordinates: null,
        frameId: 0,
        frameUrl: 'https://eval.com',
        href: 'https://eval.com',
        key: 'Control',
        selector: '.Box-header > .d-flex > .flex-1 > .css-truncate > .text-bold',
        tagName: 'A',
      },
    ]
    const optimizer = new Optimizer({})
    const optimizedEvents = optimizer.optimize(events)

    expect(optimizedEvents.length).toEqual(6)
    expect(optimizedEvents.map(item => item.action)).toEqual([
      eventsToRecord.CLICK,
      eventsOptimized.FILL,
      eventsToRecord.KEYDOWN,
      eventsToRecord.CLICK,
      headlessActions.NAVIGATION,
      eventsToRecord.KEYDOWN,
    ])
  })
})
